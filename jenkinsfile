pipeline {
    agent {
        docker {
            image 'python:3.9-slim'
              args '-v ${WORKSPACE}:/workspace -w /workspace'
            reuseNode true
        }
    }

    stages {
        stage('Checkout & SetUp') {
            steps {
                checkout scm
                sh '''
                sudo apt-get update && sudo apt-get upgrade
                    '''
            }
        }
        stage('Install Dependencies'){
            steps{
                sh '''
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install pytest pytest-django pytest-cov
                    '''
            }
        }
        stage('Lint'){
            steps{
                sh '''
                    flake8 . \
                    --count \
                    --show-source \
                    -- statistics \
                    --max-line-length=119 \
                    --exclude=migrations,venv
                    '''
            }
            post{
                failure{
                    echo 'Linting failed! Review Flake8 output above.'
                    error('Linting errors found.Pipeline halted')
                }
            }
        }
        stage('Run Test'){
            steps{
                sh '''
                python manage.py test --noinput --parallel 4
                pytest --cov=. --cov-report=xml:coverage.xml
                '''
            }
        }
        // stage('Code Quality'){
        //     steps{
        //         withSonarQubeEnv('SonarQube-Server'){
        //             sh '''
        //             sonar-scanner \
        //             -Dsonar.projectKey=django-project \
        //             -Dsonar.python.coverage.reportPaths=coverage.xml \
        //             -Dsonar.sources= . \
        //             -Dsonar.exclusions=**/migrations/**,**/tests/**
        //             '''
        //         }
        //     }
        // }
    }
}
